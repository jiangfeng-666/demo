version: 2.1

anchors:
  context: &context
    context:
      - SonarCloud
      - composer-auth
      - ci-h10-slack-auth
      - ci-h10-grafana
    filters:
      branches:
        only: master

  pr-filter: &pr-filter
    context:
      - SonarCloud
      - composer-auth
      - ci-h10-slack-auth
    filters:
      branches:
        ignore:
          - master
          - stage

  pr-stage: &pr-stage
    filters:
      branches:
        only: stage
    context:
      - SonarCloud
      - composer-auth

orbs:
  h10p-ecr-multiarch-build: helium10/h10p-ecr-multiarch-build@0.0
  h10p-slack: helium10/h10p-slack@0.0
  h10p-phpcs-review: helium10/h10p-phpcs-review@0.0
  h10p-grafana: helium10/h10p-grafana@0.0
  h10p-vault: helium10/h10p-vault@0.0

workflows:
  staging:
    jobs:
      - h10p-vault/init-dynamic-aws-creds:
          <<: *pr-stage
          name: "Init dynamic AWS creds"
          VAULT_ADDR: "https://vault-internal.helium10-dev.com"
          VAULT_ROLE: "h10-vault-ci-ro-role"
          AWS_VAULT_ROLE: "h10-vault-ci-ro-role"

      - h10p-ecr-multiarch-build/build-push:
          name: Docker Build and Push to ECR
          <<: *pr-stage
          image: "ubuntu-2004:current"
          resource_class: "medium"
          path: ./
          dockerfile: docker/production/app/Dockerfile
          tag: dsa-stage
          args: --build-arg build_number=$SHORT_GIT_HASH --build-arg PLATFORM=Linux --build-arg COMPOSER_AUTH=$COMPOSER_AUTH
          use-workspace: true
          path-workspace: ../
          requires:
            - Init dynamic AWS creds

      - h10p-ecr-multiarch-build/build-manifest:
          name: "Build manifest for new images"
          <<: *pr-stage
          resource-class: helium10/h10-eks-runner
          tag: dsa-stage
          tag-latest: true
          enable-arm64: false
          send-api-notice: true
          use-workspace: true
          path-workspace: ../


  pr-checks:
    jobs:
      - h10p-vault/init-dynamic-aws-creds:
          <<: *pr-filter
          name: "Init dynamic AWS creds"
          VAULT_ADDR: "https://vault-internal.helium10-dev.com"
          VAULT_ROLE: "h10-vault-ci-ro-role"
          AWS_VAULT_ROLE: "h10-vault-ci-ro-role"
#      - h10p-phpcs-review/symfony-security-check:
#          <<: *pr-filter
#          name: Symfony Security Check
#          composer-lock-file: ./composer.lock
      - h10p-phpcs-review/composer-unused-packages:
          <<: *pr-filter
          name: Composer Unused Package Check
          resource-class: helium10/h10-eks-runner
          image: 436598850111.dkr.ecr.us-east-1.amazonaws.com/multiarch-php-core-image-v5:27da4fb
          php-redis-version: ""
          php-imagick-version: ""
          php-mongo-version: ""
          php-intl-version: ""
          src-path: .
      - h10p-phpcs-review/phpcs:
          <<: *pr-filter
          name: PHPCS Checks
          resource-class: helium10/h10-eks-runner
          image: 436598850111.dkr.ecr.us-east-1.amazonaws.com/multiarch-php-core-image-v5:27da4fb
          php-redis-version: ""
          php-imagick-version: ""
          use-reviewdog: true
          composer-clean: true
          diff-blob: "'*.php'"
          phpcs-report: checkstyle
          phpcs-standard: phpcs.xml
      - h10p-phpcs-review/phpstan:
          <<: *pr-filter
          name: PHPStan Check
          resource-class: helium10/h10-eks-runner
          image: 436598850111.dkr.ecr.us-east-1.amazonaws.com/multiarch-php-core-image-v5:27da4fb
          php-redis-version: ""
          use-reviewdog: true
      - h10p-phpcs-review/openapi:
          <<: *pr-filter
          name: OpenApi Check
          resource-class: helium10/h10-eks-runner
          image: 436598850111.dkr.ecr.us-east-1.amazonaws.com/multiarch-php-core-image-v5:27da4fb
          php-redis-version: ""
      - h10p-phpcs-review/run-tests:
          <<: *pr-filter
          name: Run PhpUnit Tests
          resource-class: xlarge
          container-name: "dsa_webapp"
          code-coverage: true
          sonarcloud-scan: true
          phpunit-parallelism: true
          use-workspace: true
          path-workspace: ../
          requires:
            - Init dynamic AWS creds
      - h10p-slack/folder-diff-message:
          <<: *pr-filter
          resource-class: helium10/h10-eks-runner
          slack-channel: "C03EPCPE2RK"
          checked-folder: "./database/migrations"
          files-pattern: ".*(delete|drop|truncate|remove|rename).*.php"
      - h10p-slack/folder-diff-message:
          <<: *pr-filter
          resource-class: helium10/h10-eks-runner
          slack-channel: "C03EPCPE2RK"
          checked-folder: "./database/migrations-clickhouse"
          files-pattern: ".*(delete|drop|truncate|remove|rename).*.php"

  build:
    jobs:
      - h10p-vault/init-dynamic-aws-creds:
          <<: *context
          name: "Init dynamic AWS creds"
          VAULT_ADDR: "https://vault-internal.helium10-dev.com"
          VAULT_ROLE: "ci-h10-dsa-api"
          AWS_VAULT_ROLE: "ci-h10-dsa-api"

      - h10p-ecr-multiarch-build/build-push:
          name: build-amd64
          <<: *context
          image: "ubuntu-2004:current"
          resource_class: "medium"
          arch: "amd64"
          dockerfile: docker/production/app/Dockerfile
          args: --build-arg build_number=$SHORT_GIT_HASH --build-arg COMPOSER_AUTH=$COMPOSER_AUTH --build-arg PLATFORM=Linux
          tag: dsa
          use-workspace: true
          path-workspace: ../
          requires:
            - Init dynamic AWS creds
      - h10p-ecr-multiarch-build/build-push:
          name: build-arm64
          <<: *context
          image: "ubuntu-2004:current"
          resource_class: "arm.medium"
          arch: "arm64"
          dockerfile: docker/production/app/Dockerfile
          args: --build-arg build_number=$SHORT_GIT_HASH --build-arg COMPOSER_AUTH=$COMPOSER_AUTH --build-arg PLATFORM=Darwin
          tag: dsa
          use-workspace: true
          path-workspace: ../
          requires:
              - Init dynamic AWS creds
      - h10p-ecr-multiarch-build/build-manifest:
          <<: *context
          name: Multiarhc manifest build
          resource-class: helium10/h10-eks-runner
          tag-latest: true
          tag: dsa
          send-api-notice: true
          use-workspace: true
          path-workspace: ../
          requires:
            - build-amd64
            - build-arm64
      - h10p-grafana/add_annotation:
          <<: *context
          name: Annotation to Grafana
          tags: "MT360, dsa"
          user_text: "New release in production!"
          requires:
            - Multiarhc manifest build
